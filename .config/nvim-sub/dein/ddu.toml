[[plugins]]
repo = 'Shougo/ddu-commands.vim'
on_source = 'ddu.vim'

[[plugins]]
repo = 'Shougo/ddu-ui-ff'
on_source = 'ddu.vim'

[[plugins]]
repo = 'Shougo/ddu-ui-filer'
on_source = 'ddu.vim'

[[plugins]]
repo = 'Shougo/ddu-kind-file'
on_source = 'ddu.vim'

[[plugins]]
repo = 'Shougo/ddu-kind-word'
on_source = 'ddu.vim'

[[plugins]]
repo = 'Shougo/ddu-source-file'
on_source = 'ddu.vim'

[[plugins]]
repo = 'Shougo/ddu-source-action'
on_source = 'ddu.vim'

[[plugins]]
repo = 'Shougo/ddu-source-file_rec'
on_source = 'ddu.vim'

[[plugins]]
repo = 'Shougo/ddu-source-file_old'
on_source = 'ddu.vim'

[[plugins]]
repo = 'Shougo/ddu-source-dummy'
on_source = 'ddu.vim'

[[plugins]]
repo = 'kamecha/ddu-source-jumplist'
on_source = 'ddu.vim'

[[plugins]]
repo = 'kamecha/ddu-source-floaterm'
on_source = 'ddu.vim'

[[plugins]]
repo = 'kamecha/ddu-source-window'
on_source = 'ddu.vim'

[[plugins]]
repo = 'kamecha/ddu-filter-converter_highlight'
on_source = 'ddu.vim'

[[plugins]]
repo = 'kuuote/ddu-source-mr'
on_source = 'ddu.vim'

[[plugins]]
repo = 'kuuote/ddu-source-git_diff'
on_source = 'ddu.vim'

[[plugins]]
repo = 'kuuote/ddu-source-git_status'
on_source = 'ddu.vim'

[[plugins]]
repo = 'kyoh86/ddu-source-git_log'
on_source = 'ddu.vim'

[[plugins]]
repo = 'Shougo/ddu-source-register'
on_source = 'ddu.vim'

[[plugins]]
repo = 'Shougo/ddu-source-line'
on_source = 'ddu.vim'

[[plugins]]
repo = 'matsui54/ddu-source-help'
on_source = 'ddu.vim'

[[plugins]]
repo = 'matsui54/ddu-source-dein_update'
on_source = 'ddu.vim'

[[plugins]]
repo = 'matsui54/ddu-source-man'
on_source = 'ddu.vim'

[[plugins]]
repo = 'matsui54/ddu-source-file_external'
on_source = 'ddu.vim'

[[plugins]]
repo = 'matsui54/ddu-source-command_history'
on_source = 'ddu.vim'

[[plugins]]
repo = 'shun/ddu-source-buffer'
on_source = 'ddu.vim'

[[plugins]]
repo = 'shun/ddu-source-rg'
on_source = 'ddu.vim'

[[plugins]]
repo = '4513ECHO/vim-readme-viewer'
on_source = 'ddu.vim'
hook_add = '''
let g:readme_viewer#plugin_manager = 'dein.vim'
'''

[[plugins]]
repo = '4513ECHO/ddu-source-ghq'

[[plugins]]
repo = '4513ECHO/ddu-source-source'

[[plugins]]
repo = '4513ECHO/ddu-source-colorscheme'

[[plugins]]
repo = 'k-ota106/ddu-source-marks'

[[plugins]]
repo = 'Shougo/ddu-column-filename'
on_source = 'ddu.vim'

[[plugins]]
repo = 'ryota2357/ddu-column-icon_filename'
on_source = 'ddu.vim'

[[plugins]]
repo = 'Shougo/ddu-filter-matcher_substring'
on_source = 'ddu.vim'

[[plugins]]
repo = 'uga-rosa/ddu-filter-converter_devicon'
on_source = 'ddu.vim'

[[plugins]]
repo = 'uga-rosa/ddu-source-lsp'
on_source = 'ddu.vim'

[[plugins]]
repo = 'yuki-yano/ddu-filter-fzf'
on_source = 'ddu.vim'

[[plugins]]
repo = 'yuki-yano/ddu-source-nvim-notify'
on_source = 'ddu.vim'

[[plugins]]
repo = 'Shougo/ddu.vim'
hook_add = '''
highlight DduRed guifg=red
highlight DduLightBlue guifg=lightblue
highlight DduYellow guifg=yellow
highlight DduGreen guifg=green

call ddu#custom#patch_global('columnParams', {
    \  'icon_filename': {
    \    'customFileIcons': {
    \      'lua': { 'icon': '' },
    \      'txt': { 'icon': '' },
    \      'vue': { 'icon': '' },
    \     },
    \   }
    \ })
call ddu#custom#alias('ui', 'ff-ghq', 'ff')

call ddu#custom#patch_global('uiParams', {
		\  '_': {
		\    'filterSplitDirection': 'floating',
		\    'split': 'floating',
		\    'filterFloatingPosition': 'top',
		\    'floatingBorder': 'rounded',
		\    'previewFloating': v:true,
		\    'previewSplit': 'vertical',
		\    'previewFloatingBorder': 'rounded',
		\    'previewFloatingTitle': 'Preview',
		\    'previewFloatingTitlePos': 'center',
		\    'floatingTitle': 'Result',
		\    'floatingTitlePos': 'center',
		\  },
		\  'ff': {
		\    'autoAction': {
		\      'name': 'preview',
		\    },
		\  },
		\  'ff-ghq': {
		\    'autoAction': {
		\      'name': 'preview',
		\      'params': {
		\        'previewCmds': ['onefetch', '%s']
		\      },
		\    },
		\  },
		\  'filer': {
		\    'sortTreesFirst': v:true,
		\  },
    \ })

function! s:set_size() abort
  let s:winCol = (&columns - (&columns * 0.9)) / 2
  let s:winWidth = &columns * 0.9
  let s:winRow = 6
  let s:winHeight = &lines - 10
  let s:previewCol = &columns / 2
  let s:previewWidth = (&columns * 0.9) / 2 - 1
  let s:previewRow = 7
  let s:previewHeight = &lines - 12
endfunction

function! s:set_layout() abort
call ddu#custom#patch_global('uiParams', {
		\  '_': {
		\    'winCol': s:winCol,
		\    'winRow': s:winRow,
		\    'winWidth': s:winWidth,
		\    'winHeight': s:winHeight,
		\    'previewCol': s:previewCol,
		\    'previewWidth': s:previewWidth,
		\    'previewRow': s:previewRow,
		\    'previewHeight': s:previewHeight,
		\  },
    \ })
endfunction

function! s:layout() abort
  call s:set_size()
  call s:set_layout()
endfunction

call s:layout()

autocmd VimResized * call s:layout()

call ddu#custom#action('source', 'floaterm', 'close',
    \ { args -> execute("for item in args.items\n execute('bdelete! ' . item.action.bufnr)\n endfor") })
call ddu#custom#action('source', 'buffer', 'close',
    \ { args -> execute("for item in args.items\n execute('bdelete! ' . item.action.bufNr)\n endfor") })

call ddu#custom#patch_global({
    \  'ui': 'ff',
    \  'sources': [{'name': 'file_rec', 'params': {}}],
    \  'sourceParams': {
    \    'file_external': {
    \      'cmd': ['fd', '.', '-H', '-E', '__pycache__', '-t', 'f'],
    \    },
    \  },
    \  'sourceOptions': {
    \    '_': {
    \      'matchers': ['matcher_fzf'],
    \      'sorters': ['sorter_fzf'],
    \    },
    \    'lsp_diagnostic': {
    \      'converters': ['converter_lsp_diagnostic'],
    \    },
    \    'lsp_documentSymbol': {
    \      'converters': ['converter_lsp_symbol'],
    \    },
    \    'lsp_workspaceSymbol': {
    \      'converters': ['converter_lsp_symbol'],
    \    },
    \    'git_status': {
    \      'converters': ['converter_git_status'],
    \    },
    \    'file': {
    \      'columns': ['icon_filename'],
    \    },
    \    'file_rec': {
    \      'columns': [{'name': 'icon_filename', 'params': { 'pathDisplayOption': 'relative' }}],
    \    },
    \    'mr': {
    \      'columns': [{'name': 'icon_filename', 'params': { 'pathDisplayOption': 'relative' }}],
    \    },
    \    'file_external': {
    \      'columns': [{'name': 'icon_filename', 'params': { 'pathDisplayOption': 'relative' }}],
    \    },
    \  },
    \  'kindOptions': {
    \    'file': {
    \      'defaultAction': 'open',
    \    },
    \    'man': {
    \      'defaultAction': 'open',
    \    },
    \    'word': {
    \      'defaultAction': 'append',
    \    },
    \    'command_history': {
    \      'defaultAction': 'execute',
    \    },
    \    'help': {
    \      'defaultAction': 'open',
    \    },
    \    'readme_viewer': {
    \      'defaultAction': 'open',
    \    },
    \    'git_status': {
    \      'defaultAction': 'open',
    \    },
    \    'ghq': {
    \      'defaultAction': 'open',
    \    },
    \    'lsp': {
    \      'defaultAction': 'open',
    \    },
    \    'lsp_codeAction': {
    \      'defaultAction': 'apply',
    \    },
    \    'action': {
    \      'defaultAction': 'do',
    \    },
    \    'nvim-notify': {
    \      'defaultAction': 'open',
    \    },
    \    'source': {
    \      'defaultAction': 'execute',
    \    },
    \    'colorscheme': {
    \      'defaultAction': 'set',
    \    },
    \    'dein_update': {
    \      'defaultAction': 'viewDiff',
    \    },
    \    'floaterm': {
    \      'defaultAction': 'open',
    \    },
    \    'window': {
    \      'defaultAction': 'open',
    \    },
    \  },
    \  'actionOptions': {
    \    'echo': {
    \      'quit': v:false,
    \    },
    \    'echoDiff': {
    \      'quit': v:false,
    \    },
    \  },
    \})

call ddu#custom#patch_local("lsp_def", {
		\  'ui': 'ff',
		\  'uiParams': {
		\    'ff': {
		\      'startAutoAction': v:true,
		\      'autoAction': {
		\        'name': 'preview'
		\      },
		\    },
		\  },
		\  'sources': [
		\    {
		\      'name': 'dummy',
		\      'options': {
		\        'converters': [
		\          { 'name': 'converter_highlight', 'params': { 'hl_group': 'DduRed' } },
		\        ],
		\      },
		\      'params': {
		\        'display': '>>Definition<<',
		\      }
		\    },
		\    { 'name': 'lsp_definition', 'params': { 'method': 'textDocument/definition' }},
		\    {
		\      'name': 'dummy',
		\      'options': {
		\        'converters': [
		\          { 'name': 'converter_highlight', 'params': { 'hl_group': 'DduLightBlue' } },
		\        ],
		\      },
		\      'params': {
		\        'display': '>>typeDefinition<<',
		\      },
		\    },
		\    { 'name': 'lsp_definition', 'params': { 'method': 'textDocument/typeDefinition' }},
		\    {
		\      'name': 'dummy',
		\      'options': {
		\        'converters': [
		\          { 'name': 'converter_highlight', 'params': { 'hl_group': 'DduYellow' } },
		\        ],
		\      },
		\      'params': {
		\        'display': '>>declaration<<',
		\      }
		\    },
		\    { 'name': 'lsp_definition', 'params': { 'method': 'textDocument/declaration' }},
		\    {
		\      'name': 'dummy',
		\      'options': {
		\        'converters': [
		\          { 'name': 'converter_highlight', 'params': { 'hl_group': 'DduGreen' } },
		\        ],
		\      },
		\      'params': {
		\        'display': '>>Implementation<<',
		\      }
		\    },
		\    { 'name': 'lsp_definition', 'params': { 'method': 'textDocument/implementation' }},
		\  ],
		\})

call ddu#custom#patch_local("lsp_hie", {
		\  'ui': 'ff',
		\  'uiParams': {
		\    'ff': {
		\      'startAutoAction': v:true,
		\      'autoAction': {
		\        'name': 'preview'
		\      },
		\    },
		\  },
		\  'sources': [
		\    {
		\      'name': 'dummy',
		\      'options': {
		\        'converters': [
		\          { 'name': 'converter_highlight', 'params': { 'hl_group': 'DduRed' } },
		\        ],
		\      },
		\      'params': {
		\        'display': '>>incomingCalls<<',
		\      }
		\    },
		\    { 'name': 'lsp_callHierarchy', 'params': { 'method': 'callHierarchy/incomingCalls' }},
		\    {
		\      'name': 'dummy',
		\      'options': {
		\        'converters': [
		\          { 'name': 'converter_highlight', 'params': { 'hl_group': 'DduLightBlue' } },
		\        ],
		\      },
		\      'params': {
		\        'display': '>>outgoingCalls<<',
		\      }
		\    },
		\    { 'name': 'lsp_callHierarchy', 'params': { 'method': 'callHierarchy/outgoingCalls' }},
		\    {
		\      'name': 'dummy',
		\      'options': {
		\        'converters': [
		\          { 'name': 'converter_highlight', 'params': { 'hl_group': 'DduYellow' } },
		\        ],
		\      },
		\      'params': {
		\        'display': '>>Reference<<',
		\      }
		\    },
		\    { 'name': 'lsp_references' },
		\  ],
		\})

nnoremap <silent> <Leader>fe :Ddu -ui=filer file<CR>
nnoremap <silent> <Leader>fw :Ddu -ui=ff window -ui-param-ff-startAutoAction<CR>
nnoremap <silent> <Leader>ff :Ddu -ui=ff file_external -ui-param-ff-startAutoAction -ui-param-ff-startFilter=v:true<CR>
nnoremap <silent> <Leader>h :Ddu -ui=ff mr -ui-param-ff-startAutoAction<CR>
nnoremap <silent> <Leader>fr :Ddu -ui=ff register -ui-param-ff-startAutoAction<CR>
nnoremap <silent> <Leader>/ :Ddu -ui=ff rg -source-option-ff-volatile=v:true -ui-param-ff-startAutoAction -ui-param-ff-startFilter=v:true<CR>
nnoremap <silent> <Leader>fb :Ddu -ui=ff buffer -ui-param-ff-startAutoAction<CR>
nnoremap <silent> <Leader>fh :Ddu -ui=ff help -ui-param-ff-startAutoAction -ui-param-ff-startFilter=v:true<CR>
nnoremap <silent> <Leader>fc :Ddu -ui=ff command_history<CR>
nnoremap <silent> <Leader>fm :Ddu -ui=ff marks -ui-param-ff-startAutoAction<CR>
nnoremap <silent> <Leader>fn :Ddu -ui=ff nvim-notify -ui-param-ff-startAutoAction<CR>
nnoremap <silent> <Leader>fj :Ddu -ui=ff jumplist -ui-param-ff-startAutoAction<CR>
nnoremap <silent> <Leader>fs :Ddu -ui=ff source -ui-param-ff-startAutoAction<CR>
nnoremap <silent> <Leader>gs :Ddu -ui=ff git_status -source-option-ff-path=`expand('%:p')` -source-option-ff-converter='converter_git_status' -ui-param-ff-startAutoAction<CR>
nnoremap <silent> <Leader>gd :Ddu -ui=ff git_diff -source-option-ff-path=`expand('%:p')`<CR>
nnoremap <silent> <Leader>gl :Ddu -ui=ff git_log -source-param-ff-showGraph -ui-param-ff-startAutoAction<CR>
nnoremap <silent> <Leader>gh :Ddu -ui=ff ghq -ui='ff-ghq' -ui-param-ff-startAutoAction<CR>
nnoremap <silent> <Leader>fd :Ddu -ui=ff dein -ui-param-ff-startFilter=v:true<CR>
nnoremap <silent> <Leader>fl :Ddu -ui=ff line -ui-param-ff-startFilter=v:true -ui-param-ff-startAutoAction<CR>
nnoremap <silent> <Leader>ft :Ddu -ui=ff floaterm -ui-param-ff-startAutoAction<CR>
nnoremap <silent> <Leader>* :Ddu -ui=ff rg -resume=v:false -ui-param-ff-startAutoAction -ui-param-ff-ignoreEmpty -source-param-ff-input=`('<cword>'->expand())`<CR>
nnoremap <silent> gd :call ddu#start({ 'name': 'lsp_def' })<CR>
nnoremap <silent> gs :call ddu#start({ 'name': 'lsp_hie' })<CR>
nnoremap <silent> ge :Ddu -ui=ff lsp_diagnostic -ui-param-ff-startAutoAction<CR>
nnoremap <silent> <Leader>ca :Ddu -ui=ff lsp_codeAction -ui-param-ff-startAutoAction<CR>
nnoremap <silent> ds :Ddu -ui=ff lsp_documentSymbol -ui-param-ff-startAutoAction<CR>

autocmd FileType ddu-ff call s:ddu_my_settings()
function! s:ddu_my_settings() abort
setlocal cursorline
nnoremap <buffer> <CR>
\ <Cmd>call ddu#ui#do_action('itemAction')<CR>
nnoremap <buffer> i
\ <Cmd>call ddu#ui#do_action('openFilterWindow')<CR>
nnoremap <buffer> q
\ <Cmd>call ddu#ui#do_action('quit')<CR>
nnoremap <buffer> a
\ <Cmd>call ddu#ui#do_action('chooseAction')<CR>
nnoremap <buffer> <C-c>
\ <Cmd>call ddu#ui#do_action('quit')<CR>
nnoremap <buffer> p
\ <Cmd>call ddu#ui#do_action('togglePreview')<CR>
nnoremap <buffer> <C-t>
\ <Cmd>call ddu#ui#do_action('toggleAutoAction')<CR>
nnoremap <buffer> <C-u>
\ <Cmd>call ddu#ui#do_action('previewExecute', { 'command': "normal! \<C-u>"})<CR>
nnoremap <buffer> <C-d>
\ <Cmd>call ddu#ui#do_action('previewExecute', { 'command': "normal! \<C-d>"})<CR>
nnoremap <buffer> <C-n>
\ <Cmd>call ddu#ui#do_action('previewExecute', { 'command': "normal! \<C-e>"})<CR>
nnoremap <buffer> <C-p>
\ <Cmd>call ddu#ui#do_action('previewExecute', { 'command': "normal! \<C-y>"})<CR>
nnoremap <buffer> L
\ <Cmd>call ddu#ui#do_action('expandItem')<CR>
nnoremap <buffer> H
\ <Cmd>call ddu#ui#do_action('collapseItem')<CR>
nnoremap <buffer> <Tab>
\ <Cmd>call ddu#ui#do_action('toggleSelectItem')<CR>
nnoremap <buffer> A
\ <Cmd>call ddu#ui#do_action('toggleAllItems')<CR>
endfunction

autocmd FileType ddu-ff-filter call s:ddu_filter_my_settings()
function! s:ddu_filter_my_settings() abort
inoremap <buffer> <CR>
\ <Cmd>call ddu#ui#do_action('closeFilterWindow')<CR><Esc>
inoremap <buffer> <C-c>
\ <Cmd>call ddu#ui#do_action('quit')<CR><Esc>
inoremap <buffer> <C-n>
\ <Cmd>call ddu#ui#do_action('cursorNext')<CR>
inoremap <buffer> <C-p>
\ <Cmd>call ddu#ui#do_action('cursorPrevious')<CR>
inoremap <buffer> <Esc>
\ <Esc><Cmd>call ddu#ui#do_action('closeFilterWindow')<CR>
nnoremap <buffer> <C-c>
\ <Cmd>call ddu#ui#do_action('quit')<CR><Esc>
nnoremap <buffer> p
\ <Cmd>call ddu#ui#do_action('togglePreview')<CR>
nnoremap <buffer> <C-t>
\ <Cmd>call ddu#ui#do_action('toggleAutoAction')<CR>
endfunction

autocmd FileType ddu-filer call s:ddu_filer_my_settings()
function! s:ddu_filer_my_settings() abort
nnoremap <buffer> <CR>
\ <Cmd>call ddu#ui#do_action('itemAction')<CR>
nnoremap <buffer> <C-c>
\ <Cmd>call ddu#ui#do_action('quit')<CR><Esc>
nnoremap <buffer> h
\ <Cmd>call ddu#ui#do_action('collapseItem')<CR>
nnoremap <buffer> l
\ <Cmd>call ddu#ui#do_action('expandItem')<CR>
nnoremap <buffer> a
\ <Cmd>call ddu#ui#do_action('chooseAction')<CR>
nnoremap <buffer> p
\ <Cmd>call ddu#ui#do_action('togglePreview')<CR>
nnoremap <buffer> <Tab>
\ <Cmd>call ddu#ui#do_action('toggleSelectItem')<CR>
nnoremap <buffer> <C-u>
\ <Cmd>call ddu#ui#do_action('previewExecute', { 'command': "normal! \<C-u>"})<CR>
nnoremap <buffer> <C-d>
\ <Cmd>call ddu#ui#do_action('previewExecute', { 'command': "normal! \<C-d>"})<CR>
nnoremap <buffer> <C-n>
\ <Cmd>call ddu#ui#do_action('previewExecute', { 'command': "normal! \<C-e>"})<CR>
nnoremap <buffer> <C-p>
\ <Cmd>call ddu#ui#do_action('previewExecute', { 'command': "normal! \<C-y>"})<CR>
endfunction
'''
