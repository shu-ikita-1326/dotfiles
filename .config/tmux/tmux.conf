# 起動時のshellを環境変数から読み込む
set-option -g default-shell "${SHELL}"
set -g default-command "${SHELL}"

# true color対応
set-option -g default-terminal "tmux-256color"
set-option -ga terminal-overrides ",xterm-256color:RGB"

# エスケープキーの反応をよくする
set -g escape-time 50

# prefixのキーバインドを変更
unbind-key C-b
set-option -g prefix C-j
bind-key C-j send-prefix

# マウス使用をオンにする
set-option -g mouse on

# prefix + r で.tmux.confをリロードする
bind r source-file ~/.config/tmux/tmux.conf \; display "Reloaded."

# vimライクな操作でペイン移動
bind -r h select-pane -L
bind -r j select-pane -D
bind -r k select-pane -U
bind -r l select-pane -R

# vimライクな操作でペインサイズ調整
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# ウィンドウ移動の方向をキーの位置と合わせる
bind -r n previous-window
bind -r p next-window

# prefix + v で垂直分割
bind v split-window -h
# prefix + s で水平分割
bind s split-window -v

# fzfを用いてセッションを切り替える
bind t popup -E "tmux switch -t `tmux ls | fzf | awk '{print $1}' | sed 's/.$//'`"

# セッションを選択して切り替える
bind C-s choose-tree -s

# 現在のペインのディレクトリにアタッチする
bind a attach-session -c '#{pane_current_path}'\; display-message 'attached #{pane_current_path}'

# lazygitをポップアップで開く
bind g popup -w90% -h90% -E "lazygit"

# コピーモードの移動でvimライク操作を使用する
setw -g mode-keys vi

# コピーモード中 v か Space で選択を始める
bind-key -T copy-mode-vi v send -X begin-selection \; display "Copy Start."
bind-key -T copy-mode-vi Space send -X begin-selection \; display "Copy Start."
# コピーモード中 V で行選択を始める
bind-key -T copy-mode-vi V send -X select-line \; display "Copy Line Start."
# コピーモード中 Ctrl + v で矩形選択を始める
bind-key -T copy-mode-vi C-v send -X rectangle-toggle \; display "Copy Rectangle Start."
# コピーした内容を Ctrl + p で貼り付ける
bind-key C-p paste-buffer

# hooks
# セッション作成時、セッション名をカレントディレクトリに変更
set-hook -g session-created "rename '#{b:session_path}'"
# セッション変更時、セッション名をカレントディレクトリに変更
set-hook -g client-session-changed "rename '#{b:session_path}'"

# Windows : tmux save-buffer で echo しパイプを使って clip.exe に渡す
if -b 'command -v clip.exe                   > /dev/null 2>&1'  'bind-key -T copy-mode-vi y     send-keys -X copy-pipe-and-cancel "tmux save-buffer - | iconv -f UTF-8 -t UTF-16 | clip.exe" \; display "Copied!"'
if -b 'command -v clip.exe                   > /dev/null 2>&1'  'bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "tmux save-buffer - | iconv -f UTF-8 -t UTF-16 | clip.exe" \; display "Copied!"'

# メッセージが表示される時間
set-option -g display-time 2000

# ステータスライン設定
set-option -g status-interval 1

set-option -g status-left-length 30
set-option -g status-left  "\
#[bg=colour148]#[fg=colour234] #S:#I.#P \
"

set-option -g status-right "\
#[fg=colour236]#[fg=colour253]#[bg=colour236]\
#[fg=colour238]#[fg=colour254]#[bg=colour238]\
#[fg=colour240]#[fg=colour255]#[bg=colour240]\
s_path:#{b:session_path} %Y/%m/%d(%a) %H:%M "

set -g pane-border-style bg=colour0
set -g pane-border-style fg=colour238
set -g pane-active-border-style bg=colour0
set -g pane-active-border-style fg=colour119

set -g status-position bottom
set -g status-justify left
set -g status-bg colour234

setw -g window-status-current-style bg=colour239
setw -g window-status-current-format '\
#[fg=colour239]#[bg=colour234]#[bg=colour239]#[fg=colour119]\
#I#[fg=colour249]:#[fg=colour255]#W#[fg=colour249]\
#F#[fg=colour239]#[bg=colour234]'

setw -g window-status-style bg=colour244
setw -g window-status-style fg=colour234
setw -g window-status-format '#[fg=colour250] #I#[fg=colour237]:#[fg=colour250]#W#[fg=colour244]#F '
