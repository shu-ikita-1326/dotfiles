# ==================== Prefix ====================
# fix            | 既存の機能に問題があった場合に使用します
# hotfix         | 既存の機能にクリティカルな問題があった場合に使用します
# add            | 新しいファイルや機能を追加する場合に使用します
# feat           | 新しい機能やファイルを追加する場合に使用します
# update         | 既存の機能に問題がなく、ただし修正を加えたい場合に使用します
# change         | 仕様変更により、既存の機能に修正を加えた場合に使用します
# clean/refactor | コードを修正し、改善する場合に使用します
# improve        | コードの改善をする場合に使用します
# disable        | 機能を一時的に無効にする場合に使用します
# remove/delete  | ファイルを削除する場合や、機能を削除する場合に使用します
# rename         | ファイル名を変更する場合に使用します
# move           | ファイルを移動する場合に使用します
# upgrade        | バージョンをアップグレードする場合に使用します
# revert         | 以前のコミットに戻す場合に使用します
# docs           | ドキュメントを修正する場合に使用します
# style          | コーディングスタイルの修正をする場合に使用します
# perf           | コードのパフォーマンスを改善する場合に使用します
# test           | テストコードを修正する場合や、テストコードを追加する場合に使用します
# chore          | ビルドツールやライブラリで自動生成されたものをコミットする場合や、上記の接頭辞に当てはまらない修正をする場合に使用します。

# ==== Format ====
# prefix: Why #issue No.
# なぜそのコミットをしたのかを書く
# 例）fix: ○○の通信エラーが起きていたため××を修正
#
# Commit body...
# ==== The Seven Rules ====
# 1. 件名と本文を空白行で区切る
# 2. 件名は 50 文字までに制限する
# 3. 件名を大文字にする
# 4. 件名をピリオドで終わらせない
# 5. 件名で命令的な雰囲気を使用する
# 6. 本文を72文字で折り返す
# 7. 本文を使って、何を、なぜ、どのようにしてを説明する
#
# How to Write a Git Commit Message http://chris.beams.io/posts/git-commit/
# for http://memo.goodpatch.co/2016/07/beautiful-commits-with-emojis/
